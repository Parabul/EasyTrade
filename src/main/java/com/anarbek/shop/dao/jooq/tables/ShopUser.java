/**
 * This class is generated by jOOQ
 */
package com.anarbek.shop.dao.jooq.tables;


import com.anarbek.shop.dao.jooq.Keys;
import com.anarbek.shop.dao.jooq.Public;
import com.anarbek.shop.dao.jooq.tables.records.ShopUserRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ShopUser extends TableImpl<ShopUserRecord> {

	private static final long serialVersionUID = -969491750;

	/**
	 * The reference instance of <code>public.shop_user</code>
	 */
	public static final ShopUser SHOP_USER = new ShopUser();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<ShopUserRecord> getRecordType() {
		return ShopUserRecord.class;
	}

	/**
	 * The column <code>public.shop_user.id</code>.
	 */
	public final TableField<ShopUserRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

	/**
	 * The column <code>public.shop_user.account_non_expired</code>.
	 */
	public final TableField<ShopUserRecord, Boolean> ACCOUNT_NON_EXPIRED = createField("account_non_expired", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

	/**
	 * The column <code>public.shop_user.account_mon_locked</code>.
	 */
	public final TableField<ShopUserRecord, Boolean> ACCOUNT_MON_LOCKED = createField("account_mon_locked", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

	/**
	 * The column <code>public.shop_user.credentials_non_expired</code>.
	 */
	public final TableField<ShopUserRecord, Boolean> CREDENTIALS_NON_EXPIRED = createField("credentials_non_expired", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

	/**
	 * The column <code>public.shop_user.email</code>.
	 */
	public final TableField<ShopUserRecord, String> EMAIL = createField("email", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * The column <code>public.shop_user.enabled</code>.
	 */
	public final TableField<ShopUserRecord, Boolean> ENABLED = createField("enabled", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

	/**
	 * The column <code>public.shop_user.password</code>.
	 */
	public final TableField<ShopUserRecord, String> PASSWORD = createField("password", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * Create a <code>public.shop_user</code> table reference
	 */
	public ShopUser() {
		this("shop_user", null);
	}

	/**
	 * Create an aliased <code>public.shop_user</code> table reference
	 */
	public ShopUser(String alias) {
		this(alias, SHOP_USER);
	}

	private ShopUser(String alias, Table<ShopUserRecord> aliased) {
		this(alias, aliased, null);
	}

	private ShopUser(String alias, Table<ShopUserRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<ShopUserRecord> getPrimaryKey() {
		return Keys.SHOP_USER_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<ShopUserRecord>> getKeys() {
		return Arrays.<UniqueKey<ShopUserRecord>>asList(Keys.SHOP_USER_PKEY, Keys.UK_6REHGURDH18GNR2DBVRYVVDEF);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ShopUser as(String alias) {
		return new ShopUser(alias, this);
	}

	/**
	 * Rename this table
	 */
	public ShopUser rename(String name) {
		return new ShopUser(name, null);
	}
}
