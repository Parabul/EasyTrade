/**
 * This class is generated by jOOQ
 */
package com.anarbek.shop.dao.jooq.tables;


import com.anarbek.shop.dao.jooq.Keys;
import com.anarbek.shop.dao.jooq.Public;
import com.anarbek.shop.dao.jooq.tables.records.ProductCharacteristicRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProductCharacteristic extends TableImpl<ProductCharacteristicRecord> {

	private static final long serialVersionUID = -1145206933;

	/**
	 * The reference instance of <code>public.product_characteristic</code>
	 */
	public static final ProductCharacteristic PRODUCT_CHARACTERISTIC = new ProductCharacteristic();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<ProductCharacteristicRecord> getRecordType() {
		return ProductCharacteristicRecord.class;
	}

	/**
	 * The column <code>public.product_characteristic.id</code>.
	 */
	public final TableField<ProductCharacteristicRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

	/**
	 * The column <code>public.product_characteristic.characteristic_type</code>.
	 */
	public final TableField<ProductCharacteristicRecord, String> CHARACTERISTIC_TYPE = createField("characteristic_type", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * The column <code>public.product_characteristic.description</code>.
	 */
	public final TableField<ProductCharacteristicRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR.length(4000), this, "");

	/**
	 * The column <code>public.product_characteristic.title</code>.
	 */
	public final TableField<ProductCharacteristicRecord, String> TITLE = createField("title", org.jooq.impl.SQLDataType.VARCHAR.length(512), this, "");

	/**
	 * The column <code>public.product_characteristic.measurement_id</code>.
	 */
	public final TableField<ProductCharacteristicRecord, Long> MEASUREMENT_ID = createField("measurement_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

	/**
	 * Create a <code>public.product_characteristic</code> table reference
	 */
	public ProductCharacteristic() {
		this("product_characteristic", null);
	}

	/**
	 * Create an aliased <code>public.product_characteristic</code> table reference
	 */
	public ProductCharacteristic(String alias) {
		this(alias, PRODUCT_CHARACTERISTIC);
	}

	private ProductCharacteristic(String alias, Table<ProductCharacteristicRecord> aliased) {
		this(alias, aliased, null);
	}

	private ProductCharacteristic(String alias, Table<ProductCharacteristicRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<ProductCharacteristicRecord> getPrimaryKey() {
		return Keys.PRODUCT_CHARACTERISTIC_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<ProductCharacteristicRecord>> getKeys() {
		return Arrays.<UniqueKey<ProductCharacteristicRecord>>asList(Keys.PRODUCT_CHARACTERISTIC_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<ProductCharacteristicRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<ProductCharacteristicRecord, ?>>asList(Keys.PRODUCT_CHARACTERISTIC__FK_Y2U4V1ANJIW8EGN4OCL7H0TC);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public ProductCharacteristic as(String alias) {
		return new ProductCharacteristic(alias, this);
	}

	/**
	 * Rename this table
	 */
	public ProductCharacteristic rename(String name) {
		return new ProductCharacteristic(name, null);
	}
}
