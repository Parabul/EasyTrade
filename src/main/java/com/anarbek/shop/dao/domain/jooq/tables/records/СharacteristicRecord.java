/**
 * This class is generated by jOOQ
 */
package com.anarbek.shop.dao.domain.jooq.tables.records;


import com.anarbek.shop.dao.domain.jooq.tables.Сharacteristic;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class СharacteristicRecord extends UpdatableRecordImpl<СharacteristicRecord> implements Record5<Long, String, String, String, Long> {

	private static final long serialVersionUID = -510612819;

	/**
	 * Setter for <code>public.сharacteristic.id</code>.
	 */
	public void setId(Long value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>public.сharacteristic.id</code>.
	 */
	public Long getId() {
		return (Long) getValue(0);
	}

	/**
	 * Setter for <code>public.сharacteristic.description</code>.
	 */
	public void setDescription(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>public.сharacteristic.description</code>.
	 */
	public String getDescription() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>public.сharacteristic.title</code>.
	 */
	public void setTitle(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>public.сharacteristic.title</code>.
	 */
	public String getTitle() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>public.сharacteristic.сharacteristic_type</code>.
	 */
	public void setСharacteristicType(String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>public.сharacteristic.сharacteristic_type</code>.
	 */
	public String getСharacteristicType() {
		return (String) getValue(3);
	}

	/**
	 * Setter for <code>public.сharacteristic.measurement_id</code>.
	 */
	public void setMeasurementId(Long value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>public.сharacteristic.measurement_id</code>.
	 */
	public Long getMeasurementId() {
		return (Long) getValue(4);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Long> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record5 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row5<Long, String, String, String, Long> fieldsRow() {
		return (Row5) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row5<Long, String, String, String, Long> valuesRow() {
		return (Row5) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Long> field1() {
		return Сharacteristic.СHARACTERISTIC.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return Сharacteristic.СHARACTERISTIC.DESCRIPTION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return Сharacteristic.СHARACTERISTIC.TITLE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field4() {
		return Сharacteristic.СHARACTERISTIC.СHARACTERISTIC_TYPE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Long> field5() {
		return Сharacteristic.СHARACTERISTIC.MEASUREMENT_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getDescription();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getTitle();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value4() {
		return getСharacteristicType();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long value5() {
		return getMeasurementId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public СharacteristicRecord value1(Long value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public СharacteristicRecord value2(String value) {
		setDescription(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public СharacteristicRecord value3(String value) {
		setTitle(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public СharacteristicRecord value4(String value) {
		setСharacteristicType(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public СharacteristicRecord value5(Long value) {
		setMeasurementId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public СharacteristicRecord values(Long value1, String value2, String value3, String value4, Long value5) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached СharacteristicRecord
	 */
	public СharacteristicRecord() {
		super(Сharacteristic.СHARACTERISTIC);
	}

	/**
	 * Create a detached, initialised СharacteristicRecord
	 */
	public СharacteristicRecord(Long id, String description, String title, String сharacteristicType, Long measurementId) {
		super(Сharacteristic.СHARACTERISTIC);

		setValue(0, id);
		setValue(1, description);
		setValue(2, title);
		setValue(3, сharacteristicType);
		setValue(4, measurementId);
	}
}
