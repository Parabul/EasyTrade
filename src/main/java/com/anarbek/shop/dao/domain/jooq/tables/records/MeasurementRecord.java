/**
 * This class is generated by jOOQ
 */
package com.anarbek.shop.dao.domain.jooq.tables.records;


import com.anarbek.shop.dao.domain.jooq.tables.Measurement;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MeasurementRecord extends UpdatableRecordImpl<MeasurementRecord> implements Record5<Long, String, String, String, String> {

	private static final long serialVersionUID = 1653462450;

	/**
	 * Setter for <code>public.measurement.id</code>.
	 */
	public void setId(Long value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>public.measurement.id</code>.
	 */
	public Long getId() {
		return (Long) getValue(0);
	}

	/**
	 * Setter for <code>public.measurement.description</code>.
	 */
	public void setDescription(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>public.measurement.description</code>.
	 */
	public String getDescription() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>public.measurement.measurement_position</code>.
	 */
	public void setMeasurementPosition(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>public.measurement.measurement_position</code>.
	 */
	public String getMeasurementPosition() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>public.measurement.title</code>.
	 */
	public void setTitle(String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>public.measurement.title</code>.
	 */
	public String getTitle() {
		return (String) getValue(3);
	}

	/**
	 * Setter for <code>public.measurement.value</code>.
	 */
	public void setValue(String value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>public.measurement.value</code>.
	 */
	public String getValue() {
		return (String) getValue(4);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Long> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record5 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row5<Long, String, String, String, String> fieldsRow() {
		return (Row5) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row5<Long, String, String, String, String> valuesRow() {
		return (Row5) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Long> field1() {
		return Measurement.MEASUREMENT.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return Measurement.MEASUREMENT.DESCRIPTION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return Measurement.MEASUREMENT.MEASUREMENT_POSITION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field4() {
		return Measurement.MEASUREMENT.TITLE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field5() {
		return Measurement.MEASUREMENT.VALUE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getDescription();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getMeasurementPosition();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value4() {
		return getTitle();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value5() {
		return getValue();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MeasurementRecord value1(Long value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MeasurementRecord value2(String value) {
		setDescription(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MeasurementRecord value3(String value) {
		setMeasurementPosition(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MeasurementRecord value4(String value) {
		setTitle(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MeasurementRecord value5(String value) {
		setValue(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MeasurementRecord values(Long value1, String value2, String value3, String value4, String value5) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached MeasurementRecord
	 */
	public MeasurementRecord() {
		super(Measurement.MEASUREMENT);
	}

	/**
	 * Create a detached, initialised MeasurementRecord
	 */
	public MeasurementRecord(Long id, String description, String measurementPosition, String title, String value) {
		super(Measurement.MEASUREMENT);

		setValue(0, id);
		setValue(1, description);
		setValue(2, measurementPosition);
		setValue(3, title);
		setValue(4, value);
	}
}
