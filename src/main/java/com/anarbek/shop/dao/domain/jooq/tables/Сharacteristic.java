/**
 * This class is generated by jOOQ
 */
package com.anarbek.shop.dao.domain.jooq.tables;


import com.anarbek.shop.dao.domain.jooq.Keys;
import com.anarbek.shop.dao.domain.jooq.Public;
import com.anarbek.shop.dao.domain.jooq.tables.records.СharacteristicRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Сharacteristic extends TableImpl<СharacteristicRecord> {

	private static final long serialVersionUID = -1508829530;

	/**
	 * The reference instance of <code>public.сharacteristic</code>
	 */
	public static final Сharacteristic СHARACTERISTIC = new Сharacteristic();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<СharacteristicRecord> getRecordType() {
		return СharacteristicRecord.class;
	}

	/**
	 * The column <code>public.сharacteristic.id</code>.
	 */
	public final TableField<СharacteristicRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

	/**
	 * The column <code>public.сharacteristic.description</code>.
	 */
	public final TableField<СharacteristicRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR.length(4000), this, "");

	/**
	 * The column <code>public.сharacteristic.title</code>.
	 */
	public final TableField<СharacteristicRecord, String> TITLE = createField("title", org.jooq.impl.SQLDataType.VARCHAR.length(512), this, "");

	/**
	 * The column <code>public.сharacteristic.сharacteristic_type</code>.
	 */
	public final TableField<СharacteristicRecord, String> СHARACTERISTIC_TYPE = createField("сharacteristic_type", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

	/**
	 * The column <code>public.сharacteristic.measurement_id</code>.
	 */
	public final TableField<СharacteristicRecord, Long> MEASUREMENT_ID = createField("measurement_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

	/**
	 * Create a <code>public.сharacteristic</code> table reference
	 */
	public Сharacteristic() {
		this("сharacteristic", null);
	}

	/**
	 * Create an aliased <code>public.сharacteristic</code> table reference
	 */
	public Сharacteristic(String alias) {
		this(alias, СHARACTERISTIC);
	}

	private Сharacteristic(String alias, Table<СharacteristicRecord> aliased) {
		this(alias, aliased, null);
	}

	private Сharacteristic(String alias, Table<СharacteristicRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<СharacteristicRecord> getPrimaryKey() {
		return Keys.СHARACTERISTIC_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<СharacteristicRecord>> getKeys() {
		return Arrays.<UniqueKey<СharacteristicRecord>>asList(Keys.СHARACTERISTIC_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<СharacteristicRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<СharacteristicRecord, ?>>asList(Keys.СHARACTERISTIC__FK_HOXPT39HV4OE3FQLVQR2HM0IF);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Сharacteristic as(String alias) {
		return new Сharacteristic(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Сharacteristic rename(String name) {
		return new Сharacteristic(name, null);
	}
}
